#summary Covering technicality of OpenGL.

= Introduction =
In this page we try to cover OpenGL technical issues. [http://en.wikipedia.org/wiki/OpenGL Open Graphics Library (OpenGL)] is a standard specification defining a cross-language, cross-platform API for writing applications that produce 2D and 3D computer graphics. In short, OpenGL is a standard (not a library) to make a same code to be able to use use in different machine, different language, different platform, etc.

There are many libraries that agree with this standard e.g. GLUT, GLEW. One library has its own advantage to the other, but the most basic one (which should be enough) is GLUT (OpenGL Utility Toolkit).

= What can GLUT do? =
GLUT provides most of APIs to present the information (image and 3D model) through screen, some connections with window, lighting, interface to render engine, interface to write shader, etc.
  * create window with mouse and keyboard handle to display something
  * place camera
  * drawing something (triangle, cube, sphere)
  * matrix operation (for transform object, camera projection, etc)
  * create light source
  * load and apply material
  * interface with user shader
  * render image
  * much more! :D

N.B. GLUI (OpenGL User Interface Library) which based on GLUT can provide you common controls such as buttons, checkboxes, radio buttons, and spinners to OpenGL applications. It is window- and operating system independent, relying on GLUT to handle all system-dependent issues, such as window and mouse management. However, GLUI is depricated to create GUI. Other library/framework like WxWidget, Qt, GTK are recommended.

= Details =
Coming soon. :)

== Installation ==
In this section we cover how to install OpenGL in your machine step by step.


=== Code Blocks ===
Since it seems must of the people have been manipulated by using the Code Blocks, I tried first to install glut for that IDE.

 # Download glut-3.7.6-bin from this link.
 # Copy glut32.dll to c:\windows\system,
 # Copy glut32.lib to C:\Program Files (x86)\Code Blocks\MinGW\lib (The path might be different on your machine, but very similar to this one, depending on the Windows you're using.)
 # Copy glut.h to c:\Program Files (x86)\Code Blocks\MinGW\include\GL.

It's not yet fully done, more things need to be fixed in the code, will write it in the morning.

=== Eigen ==
In order to use Eigen, you just need to download and extract Eigen's source code (see the wiki for download instructions). In fact, the header files in the Eigen subdirectory are the only files required to compile programs using Eigen. The header files are the same for all platforms. It is not necessary to use CMake or install anything.

*This is not related to OpenGL, but necessary to compile the code we got for the project, I'm going to migrate it tomorrow to somewhere more approperiate.*

= Some famous functions =
  * Must know
    * *glutInit(&argc,argv);* - initialize the GLUT library, e.g. talk to OS, check for hardware compatibility, etc. If in doubt, throw &argc,argv in. :)
    * *glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA | GLUT_DEPTH);* - configure display mode, e.g. color, double buffer, depth buffer, other buffer. If in doubt, use GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH. :)
    * *glutCreateWindow("YF_Viewer 1.1");* - create the window with that name
    * *glEnable(GL_DEPTH_TEST);* - turn on/off some options. There are too many options to mention. Most of time you need GL_DEPTH_TEST, so GL ckecks for occlusion of objects in scene.
    * *glutDisplayFunc(drawScene);* - draw something. Please see "How to draw?".
    * *glutReshapeFunc(reshape);* - bind the callback function name 'reshape'. When the window is resized, the function is called.
  * Good to know
    * *glutInitWindowSize(800,800);* - set the window size in pixel.
    * *glutInitWindowPosition(00,00);* - set window position in pixel.
    * *glutMotionFunc(motion);* - bind the callback function name 'motion'. When the mouse is moved within the window while some mouse buttons are pressed, the function is called.
    * *glutPassiveMotionFunc(passiveMotion);* - bind the callback function name 'passiveMotion'. When the mouse is moved within the window while no mouse buttons are pressed, the function is called.
    * *glutMouseFunc(mouse);* - bind the callback function name 'mouse'. When the mouse is clicked, the function is called.
    * *glutKeyboardFunc(keyboard);* - bind the callback function name 'keyboard'. When the key is pressed, the function is called. This function detect only 'char' keys.
  * Rare, but still it is in the project...
    * *glutSpecialFunc(Special);* - bind the callback function name 'keyboard'. When the key is pressed, the function is called. This function detect any keys.
    * *glBindTexture()* - comming soon :)
    * *glGenLists()*
    * *glNewList()*


These functions should be call in order; glutInit(...) > glutInitDisplayMode(...) > init window (if neccessary) > glutCreateWindow(...) > set callback functions (glutDisplayFunc(...) and glutReshapeFunc(...) must be specified. The rest is not mandatory).

Every callback function has it own pre-defined argument list. For example, with glutKeyboardFunc(keyboard);, keyboard function has to be something like "void keyboard(unsigned char key, int x, int y);". Please see the references.

= How to draw? =
comming soon :D

= Tutorial =
[http://www.videotutorialsrock.com This tutorial] is quite old, but has a complete description, video, example code, etc. It will be good for starter. Hope you enjoy it! :D

= References =
 # [http://www.opengl.org/ OpenGL official website]
 # [http://en.wikipedia.org/wiki/OpenGL OpenGL in Wikipedia]
 # [http://www.videotutorialsrock.com VideoTutorialsRock]